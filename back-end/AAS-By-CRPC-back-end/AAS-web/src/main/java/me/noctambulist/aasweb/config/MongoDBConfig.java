package me.noctambulist.aasweb.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.mongodb.MongoDbFactory;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.convert.DbRefResolver;
import org.springframework.data.mongodb.core.convert.DefaultDbRefResolver;
import org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper;
import org.springframework.data.mongodb.core.convert.MappingMongoConverter;
import org.springframework.data.mongodb.core.mapping.MongoMappingContext;


/**
 * @Author: Hypocrite30
 * @Date: 2023/4/30 17:28
 */
@Configuration
public class MongoDBConfig {

    private final MongoDbFactory mongoDbFactory;

    private final MongoMappingContext mongoMappingContext;

    @Autowired
    public MongoDBConfig(MongoDbFactory mongoDbFactory, MongoMappingContext mongoMappingContext) {
        this.mongoDbFactory = mongoDbFactory;
        this.mongoMappingContext = mongoMappingContext;
    }

    /**
     * Config Mongo Converter inorder to remove the [_class] field automatically generated by
     * {@link MongoTemplate#insert(Object)} or {@link MongoTemplate#save(Object)}
     *
     * @return {@link MappingMongoConverter}
     */
    @Bean
    public MappingMongoConverter mappingMongoConverter() {
        DbRefResolver dbRefResolver = new DefaultDbRefResolver(mongoDbFactory);
        MappingMongoConverter converter = new MappingMongoConverter(dbRefResolver, mongoMappingContext);
        converter.setTypeMapper(new DefaultMongoTypeMapper(null));  // set [_class] field null
        return converter;
    }

}